// Generated by Zapatos (this would be generated from database schema)
// This is a placeholder until database is available for type generation

export type JSONValue = string | number | boolean | null | JSONObject | JSONArray;
export interface JSONObject {
  [key: string]: JSONValue;
}
export type JSONArray = Array<JSONValue>;

export interface earmarks {
  id: string;
  invoiceId: string;
  destinationChainId: number;
  tickerHash: string;
  invoiceAmount: string; // NUMERIC becomes string
  status: string;
  createdAt: Date;
  updatedAt: Date;
}

export interface rebalance_operations {
  id: string;
  earmarkId: string;
  originChainId: number;
  destinationChainId: number;
  tickerHash: string;
  amount: string; // NUMERIC becomes string
  slippage: string; // NUMERIC becomes string
  status: string;
  txHashes: JSONObject;
  createdAt: Date;
  updatedAt: Date;
}

export interface earmark_audit_log {
  id: number;
  earmarkId: string;
  operation: string;
  previousStatus: string | null;
  newStatus: string | null;
  details: JSONObject;
  timestamp: Date;
}

// Table insert types (all fields optional except required ones)
export interface earmarks_insert {
  id?: string;
  invoiceId: string;
  destinationChainId: number;
  tickerHash: string;
  invoiceAmount: string;
  status?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface rebalance_operations_insert {
  id?: string;
  earmarkId: string;
  originChainId: number;
  destinationChainId: number;
  tickerHash: string;
  amount: string;
  slippage?: string;
  status?: string;
  txHashes?: JSONObject;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface earmark_audit_log_insert {
  id?: number;
  earmarkId: string;
  operation: string;
  previous_status?: string | null;
  new_status?: string | null;
  details?: JSONObject;
  timestamp?: Date;
}

// Update types (all fields optional)
export interface earmarks_update {
  id?: string;
  invoiceId?: string;
  destinationChainId?: number;
  tickerHash?: string;
  invoiceAmount?: string;
  status?: string;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface rebalance_operations_update {
  id?: string;
  earmarkId?: string;
  originChainId?: number;
  destinationChainId?: number;
  tickerHash?: string;
  amount?: string;
  slippage?: string;
  status?: string;
  txHashes?: JSONObject;
  createdAt?: Date;
  updatedAt?: Date;
}

export interface earmark_audit_log_update {
  id?: number;
  earmarkId?: string;
  operation?: string;
  previous_status?: string | null;
  new_status?: string | null;
  details?: JSONObject;
  timestamp?: Date;
}

// Schema mapping
export interface DatabaseSchema {
  earmarks: earmarks;
  rebalance_operations: rebalance_operations;
  earmark_audit_log: earmark_audit_log;
}

// Common zapatos-style query types
export type WhereCondition<T> = Partial<T> | ((t: T) => boolean);
export type OrderBy<T> = keyof T | [keyof T, 'ASC' | 'DESC'];
